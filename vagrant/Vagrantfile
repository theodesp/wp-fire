# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

# Read Ansible config from config.yml, set default for use_ssl
$ansible_config = YAML.load_file("config.yml") if File.file?("config.yml")
$ansible_config ||= {"use_ssl" => false, "hostname" => "example.com"}


# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  config.vm.box = "ideasonpurpose/basic-wp"
  config.vm.hostname = $hostname

  if Vagrant.has_plugin? "vagrant-auto_network"
     config.vm.network :private_network, auto_network: true, id: "basic-wordpress-vagrant_#{$hostname}"
  else
     config.vm.network "private_network", type: "dhcp"
  end

  if Vagrant.has_plugin? "vagrant-cachier"
     config.cache.scope = :box
     config.cache.auto_detect = false
     config.cache.enable :apt
     config.cache.enable :gem
  end

  config.vm.synced_folder ".", "/vagrant", owner: "www-data", group: "www-data", mount_options: ["dmode=775,fmode=664"]

  config.vm.provider "virtualbox" do |v|
      # v.gui = true  # for debugging
      v.customize ["modifyvm", :id, "--cpus", 1]
      v.customize ["modifyvm", :id, "--memory", 1024]
      v.customize ["modifyvm", :id, "--vram", 4]
      v.customize ["modifyvm", :id, "--ioapic", "on"]
      v.customize ["modifyvm", :id, "--hwvirtex", "on"]
      v.customize ["modifyvm", :id, "--cableconnected1", "on"]
      v.customize ["modifyvm", :id, "--uartmode1", "disconnected" ]
  end

  config.vm.provision "ansible_local" do |ansible|
    ansible.compatibility_mode = "2.0"
    ansible.playbook = "ansible/main.yml"
    ansible.extra_vars = {
      theme_name: $hostname,
      vagrant_cwd: File.expand_path(__dir__),
    }
  end

  # Make sure Apache starts up every time
  config.vm.provision "shell", inline: "service apache2 restart", run: "always"
end
